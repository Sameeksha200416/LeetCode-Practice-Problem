class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        if(n==0)
        return{};
        int m = n;
        vector<vector<int>> matrix (m,vector<int>(n));
        int dir = 0;
        int left = 0;
        int right = n-1;
        int top = 0;
        int down = m-1;
        //dir = 0 left to right
        //dir = 1 top to down
        //dir = 2 right to left
        //dir = 3 down to top
        int counter = 1;
        while(top<=down && left<=right)
        {
            //dir = 0
            if(dir==0)
            {
                for(int i=left;i<=right;i++){
                    matrix[top][i] = counter++;
                }
                top++;  
            }
            //dir = 1
            if(dir==1)
            {
                for(int i=top;i<=down;i++)
                {
                    matrix[i][right] = counter++;
                }
                right--;
            }
            //dir =2
            if(dir==2)
            {
                for(int i=right;i>=left;i--)
                {
                    matrix[down][i] = counter++;
                }
                down--;
            }
            //dir = 3
            if(dir==3)
            {
                for(int i=down;i>=top;i--)
                {
                    matrix[i][left] = counter++;
                }
                left++;
            }
            dir++;
            if(dir==4)
            dir = 0;
        }
        return matrix;
    }
};
