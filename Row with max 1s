class Solution {
  public:
  int lowerBound(vector<int>arr,int n,int m){
      int low =0,high = n-1;
      int ans = n;
      //binary search approach
      while(low<=high){
          int mid = (low+high)/2;
          if(arr[mid]>=m){
              ans = mid;
              high = mid-1;
          }
          else{
              low = mid+1;
          }
      }
      return ans;
  }
    int rowWithMax1s(vector<vector<int> > &arr) {
        // code here
        int n = arr.size();
        int x = arr[0].size();
        int cnt_max =0;
        int index = -1;
        for(int i=0;i<n;i++){
            int cnt_one = x-lowerBound(arr[i],x,1);
            if(cnt_one>cnt_max){
                cnt_max=cnt_one;
                index =i;
            }
        }
        return index;
    }
};
