class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        if(n == 0) return false; // Check if the matrix is empty
        int m = matrix[0].size();
        if(m == 0) return false; // Check if rows have elements

        // Binary search
        int low = 0, high = (n * m) - 1;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            int row = mid / m;   // Calculate the row index
            int col = mid % m;   // Calculate the column index

            if(matrix[row][col] == target) return true; // Access matrix[row][col]
            else if(matrix[row][col] < target) low = mid + 1;
            else high = mid - 1;
        }
        return false;
    }
};
